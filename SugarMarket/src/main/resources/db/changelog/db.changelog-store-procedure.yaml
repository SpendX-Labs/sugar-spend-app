databaseChangeLog:
  - changeSet:
      id: "UpdateBudgetViewStoreProcedure"
      author: subham.biswas
      changes:
        - createProcedure:
            procedureName: updateBudgetView
            comments: "Procedure to update the budget view"
            procedureBody: |
              CREATE PROCEDURE updateBudgetView(IN updateDateParam DATE, IN userId INT)
              BEGIN
                DECLARE done INT DEFAULT FALSE;
                DECLARE creditCardId INT;
                DECLARE actAmount DECIMAL(10, 2);
                DECLARE remAmount DECIMAL(10, 2);
                DECLARE sumAmount DECIMAL(10, 2);
                DECLARE stDay INT;
                DECLARE dDay INT;
                DECLARE monthOfBudget VARCHAR(100);
                DECLARE yearOfBudget INT;
                DECLARE lowerDate DATE;
                DECLARE tempDueDate DATE;
                
                DECLARE creditCardCursor CURSOR FOR 
                  SELECT creditCardId FROM creditCard WHERE userId = userId;

                DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

                OPEN creditCardCursor;

                creditCardLoop: LOOP
                  FETCH creditCardCursor INTO creditCardId;
                  IF done THEN
                    LEAVE creditCardLoop;
                  END IF;

                  SELECT statementDate, dueDate INTO stDay, dDay 
                  FROM creditCard WHERE creditCardId = creditCardId;

                  SET tempDueDate = CONCAT(DATE_FORMAT(updateDateParam, '%Y-%m'), '-', LPAD(dDay, 2, '0'));
                  IF stDay > dDay THEN
                    SET tempDueDate = DATE_ADD(tempDueDate, INTERVAL 1 MONTH);
                  END IF;

                  SET lowerDate = CONCAT(DATE_FORMAT(updateDateParam, '%Y-%m'), '-', LPAD(stDay, 2, '0'));

                  IF (DAY(updateDateParam) < stDay) THEN
                    SET lowerDate = DATE_SUB(lowerDate, INTERVAL 1 MONTH);
                  ELSE
                    SET tempDueDate = DATE_ADD(tempDueDate, INTERVAL 1 MONTH);
                  END IF;

                  SET monthOfBudget = MONTHNAME(tempDueDate);
                  SET yearOfBudget = YEAR(tempDueDate);

                  SELECT SUM(e.amount) INTO sumAmount
                  FROM expense e
                  WHERE e.creditCardId = creditCardId AND e.expenseDate BETWEEN lowerDate AND updateDateParam;

                  IF sumAmount IS NULL THEN
                    SET sumAmount = 0;
                  END IF;

                  IF EXISTS (SELECT 1 FROM budgetView WHERE creditCardId = creditCardId AND budgetMonth = monthOfBudget AND budgetYear = yearOfBudget) THEN
                    SELECT actAmount, remAmount INTO actAmount, remAmount 
                    FROM budgetView 
                    WHERE creditCardId = creditCardId AND budgetMonth = monthOfBudget AND budgetYear = yearOfBudget;

                    SET remAmount = sumAmount - actAmount + remAmount;

                    UPDATE budgetView
                    SET actualAmount = sumAmount, remainingAmount = remAmount, updateDate = updateDateParam
                    WHERE creditCardId = creditCardId AND budgetMonth = monthOfBudget AND budgetYear = yearOfBudget;
                  ELSE
                    INSERT INTO budgetView (userId, creditCardId, budgetMonth, budgetYear, actualAmount, remainingAmount, updateDate)
                    VALUES (
                        userId,
                        creditCardId,
                        monthOfBudget,
                        yearOfBudget,
                        sumAmount,
                        sumAmount
                    );
                  END IF;

                END LOOP creditCardLoop;

                CLOSE creditCardCursor;

              END;
